// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Xeynergy_App.Data;

#nullable disable

namespace Xeynergy_App.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20220907172458_InitialMigration1")]
    partial class InitialMigration1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Xeynergy_App.Models.AccessRule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Permission")
                        .HasColumnType("bit")
                        .HasColumnName("Permission");

                    b.Property<string>("RuleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("RuleName");

                    b.HasKey("Id");

                    b.ToTable("AccessRules");
                });

            modelBuilder.Entity("Xeynergy_App.Models.Person", b =>
                {
                    b.Property<int>("PersonID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonID"), 1L, 1);

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FirstName");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("LastName");

                    b.HasKey("PersonID");

                    b.ToTable("People");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Person");
                });

            modelBuilder.Entity("Xeynergy_App.Models.UserGroup", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int?>("AccessRuleId")
                        .HasColumnType("int");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("GroupName");

                    b.HasKey("ID");

                    b.HasIndex("AccessRuleId");

                    b.ToTable("UserGroups");
                });

            modelBuilder.Entity("Xeynergy_App.Models.Admin", b =>
                {
                    b.HasBaseType("Xeynergy_App.Models.Person");

                    b.Property<string>("Privilege")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Privileges");

                    b.HasDiscriminator().HasValue("Admin");
                });

            modelBuilder.Entity("Xeynergy_App.Models.User", b =>
                {
                    b.HasBaseType("Xeynergy_App.Models.Person");

                    b.Property<int>("UserGroupID")
                        .HasColumnType("int");

                    b.HasIndex("UserGroupID");

                    b.HasDiscriminator().HasValue("User");
                });

            modelBuilder.Entity("Xeynergy_App.Models.UserGroup", b =>
                {
                    b.HasOne("Xeynergy_App.Models.AccessRule", null)
                        .WithMany("UserGroups")
                        .HasForeignKey("AccessRuleId");
                });

            modelBuilder.Entity("Xeynergy_App.Models.User", b =>
                {
                    b.HasOne("Xeynergy_App.Models.UserGroup", "UserGroup")
                        .WithMany("Users")
                        .HasForeignKey("UserGroupID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserGroup");
                });

            modelBuilder.Entity("Xeynergy_App.Models.AccessRule", b =>
                {
                    b.Navigation("UserGroups");
                });

            modelBuilder.Entity("Xeynergy_App.Models.UserGroup", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
